# Generated by Django 2.1.3 on 2018-11-27 00:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.IntegerField(unique=True, verbose_name='Course code of module, references Osiris')),
                ('name', models.CharField(max_length=50, verbose_name='Name of Course')),
                ('year', models.IntegerField(verbose_name='The year this course takes place in')),
                ('updated_teacher', models.BooleanField(default=False, verbose_name='Has the course been marked updated by the teacher for this year?')),
                ('updated_IAPC', models.BooleanField(default=False, verbose_name='Have we already checked this course this year?')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialSelectionProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255, null=True, verbose_name='Reason why there is a difference between Osiris and availability')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Name of module')),
                ('course_code', models.IntegerField(unique=True, verbose_name='Course code of module, references Osiris')),
                ('module_moment', models.CharField(choices=[('y1_1A', 'Year one, Quartile 1'), ('y1_1B', 'Year one, Quartile 2'), ('y1_2A', 'Year one, Quartile 3'), ('y1_2B', 'Year one, Quartile 4'), ('y2_1A', 'Year two, Quartile 1'), ('y2_1B', 'Year two, Quartile 2'), ('y2_2A', 'Year two, Quartile 3'), ('y2_2B', 'Year two, Quartile 4'), ('y3_1A', 'Year three, Quartile 1'), ('y3_1B', 'Year three, Quartile 2'), ('y3_2A', 'Year three, Quartile 3'), ('y3_2B', 'Year three, Quartile 4')], max_length=5, verbose_name='Module quartile')),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name of the study, e.g. Creative Technology')),
                ('study_type', models.CharField(choices=[('BSc', 'Bachelor'), ('MSc', 'Master'), ('PreM', 'PreMaster')], max_length=5, verbose_name='Type of study')),
            ],
            options={
                'verbose_name_plural': 'studies',
            },
        ),
        migrations.CreateModel(
            name='StudyCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('Q1', 'Quartile 1'), ('Q2', 'Quartile 2'), ('Q3', 'Quartile 3'), ('Q4', 'Quartile 4'), ('Q5', 'Quartile 5 (sad summer students)'), ('Q1_HALF', 'Quartile 1, half year course'), ('Q3_HALF', 'Quartile 3, half year course'), ('FULL_YEAR', 'Full year course')], max_length=10, verbose_name='Period this relationship is relevant in')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='steambird.Course', verbose_name='Course')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='steambird.Study', verbose_name='Study')),
            ],
        ),
        migrations.CreateModel(
            name='StudyMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='StudyMaterialEdition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name of the material')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titles', models.CharField(max_length=50, verbose_name='Academic titles')),
                ('initials', models.CharField(max_length=15, verbose_name='Initials')),
                ('first_name', models.CharField(max_length=50, verbose_name='First name')),
                ('surname_prefix', models.CharField(blank=True, max_length=50, null=True, verbose_name='Surname prefix')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('retired', models.BooleanField(default=False, verbose_name='Retired')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Time of last login')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('studymaterialedition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='steambird.StudyMaterialEdition')),
                ('ISBN', models.CharField(max_length=13, unique=True, verbose_name='ISBN 10 or ISBN 13')),
                ('author', models.CharField(max_length=1000, verbose_name='Author names, comma separated')),
                ('img', models.URLField(verbose_name='Link to cover image of book')),
                ('year_of_publishing', models.IntegerField(max_length=4, verbose_name='Year this revision of the book was published.')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('steambird.studymaterialedition',),
        ),
        migrations.CreateModel(
            name='OtherMaterial',
            fields=[
                ('studymaterialedition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='steambird.StudyMaterialEdition')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('steambird.studymaterialedition',),
        ),
        migrations.CreateModel(
            name='ScientificArticle',
            fields=[
                ('studymaterialedition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='steambird.StudyMaterialEdition')),
                ('DOI', models.CharField(blank=True, max_length=255, verbose_name='Digital Object Identifier')),
                ('author', models.CharField(max_length=1000, verbose_name='Author names, comma separated')),
                ('year_of_publishing', models.IntegerField(max_length=4, verbose_name='Year this revision of the book was published.')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('steambird.studymaterialedition',),
        ),
        migrations.AddField(
            model_name='studymaterialedition',
            name='material_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='steambird.StudyMaterial', verbose_name='Material collection'),
        ),
        migrations.AddField(
            model_name='studymaterialedition',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_steambird.studymaterialedition_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='study',
            name='courses',
            field=models.ManyToManyField(through='steambird.StudyCourse', to='steambird.Course', verbose_name='List of courses'),
        ),
        migrations.AddField(
            model_name='module',
            name='coordinator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='steambird.Teacher', verbose_name='Coordinator reference for a module, references the Teacher'),
        ),
        migrations.AddField(
            model_name='materialselectionprocess',
            name='approved_material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='process_is_approved', to='steambird.StudyMaterialEdition'),
        ),
        migrations.AddField(
            model_name='materialselectionprocess',
            name='available_materials',
            field=models.ManyToManyField(related_name='process_is_available', to='steambird.StudyMaterialEdition'),
        ),
        migrations.AddField(
            model_name='materialselectionprocess',
            name='osiris_specified_material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='process_in_osiris', to='steambird.StudyMaterialEdition'),
        ),
        migrations.AddField(
            model_name='course',
            name='materials',
            field=models.ManyToManyField(to='steambird.MaterialSelectionProcess', verbose_name='The list of materials relevant for this course'),
        ),
        migrations.AddField(
            model_name='course',
            name='module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='steambird.Module', verbose_name='Links course to possible module (maths) if needed'),
        ),
        migrations.AddField(
            model_name='course',
            name='teachers',
            field=models.ManyToManyField(to='steambird.Teacher', verbose_name='List of teachers that teach this course'),
        ),
        migrations.AlterUniqueTogether(
            name='studycourse',
            unique_together={('course', 'study')},
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('course_code', 'year')},
        ),
    ]
